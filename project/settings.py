"""
Django settings for django_service project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import datetime
import json


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

print("BASE",BASE_DIR)

# import settings from JSON config
PROJECT_SETTINGS_FILE = os.path.join(BASE_DIR, "conf", "config.json")
CUSTOM_SETTINGS_FILE = os.path.join("/etc/django_conf", "config.json")
if os.path.exists(CUSTOM_SETTINGS_FILE):
    JSON_SETTINGS_FILE = CUSTOM_SETTINGS_FILE
else:
    JSON_SETTINGS_FILE = PROJECT_SETTINGS_FILE
JSON_SETTINGS = json.loads(open(JSON_SETTINGS_FILE).read())


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vqua1i2qh8&i!w&mfkeo^uex0v*(u)08x-x!q)ggv!+k94rxxy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ["*"]
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
# AUTH_USER_MODEL='app.User'
# LOGIN_URL='/admin/login/'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'rest_framework.authtoken',
    # 'rest_framework_swagger',
    'drf_yasg',
    'app',
    'django_filters',
   
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

 
 


AUTHENTICATION_BACKENDS = ('app.backend.EmailBackend', )

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'

1
# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases


DATABASES = DATABASES = {
    'default': {
        'ENGINE': 'djongo',   
        'NAME': 'ambulance_data',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOG_LEVEL = JSON_SETTINGS.get('LOG_LEVEL')



LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


STATIC_URL = '/static/'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

#SMTP configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'chnarsimha2580@gmail.com'
EMAIL_HOST_PASSWORD = 'ouyc efoi scaj ugqk'
DEFAULT_FROM_EMAIL = 'MOURITECH<chnarsimha2580@gmail.com>'


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'




DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'


SWAGGER_SETTINGS = {
    'SECURITY_DEFINATIONS':{
        'basic':{
            'type': 'basic'
        }
    }
}




REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'app.authentication.JWTAuthentication',
    ),
}

AUTHENTICATION_BACKENDS = [
    'app.backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
]




LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simpleRe': {
            # 'format': '%(levelname)s %(asctime)s %(message)s  %(module)s  %(thread)d %(pathname)s',
            'format':'V1.0.0 %(levelname)s %(asctime)s %(process)d %(thread)d %(name)s:%(lineno)s:%(funcName)s %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'file': {
        'level': 'INFO',
            'class': 'logging.FileHandler',
            # 'filename': '/home/ubuntu/car_servicing_BE/app/success.logs',
            'filename': './success.log/info.log',
            'formatter': 'simpleRe',
            'delay': True,  # Add this line to delay file creation
        },
    },
  
    'loggers':{
        'django':{
            'handlers':['file'],
            'level':'DEBUG'
        }    
    }
}